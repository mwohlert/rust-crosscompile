version: 2.1

references:
  docker_env: &docker_env
    docker:
      - image: docker:stable
  setup: &setup
    - checkout
    - setup_remote_docker
    - run: docker login -u $DOCKER_USER -p $DOCKER_PASS

commands:
  build_rust_container:
    description: "Command for building a rust cross compile docker image"
    parameters:
      target:
        type: string
    steps:
      - run: >-
          docker build
          --build-arg RUST_VERSION=$RUST_VERSION
          --build-arg DEBIAN_RELEASE=$DEBIAN_RELEASE
          -t $DOCKER_USER/rust-<< parameters.target >>:rust-$RUST_VERSION-$DEBIAN_RELEASE
          << parameters.target >>

      - run: docker push $DOCKER_USER/rust-<< parameters.target >>:rust-$RUST_VERSION-$DEBIAN_RELEASE
  build_base:
    description: "Build rust crosscompile base"
    parameters:
      debian_release:
        type: string
    steps:
      - run: >-
          docker build
          --build-arg DEBIAN_RELEASE=<< parameters.debian_release >>
          -t $DOCKER_USER/rust-base:<< parameters.debian_release >>
          -f Dockerfile.base .

      - run: docker push $DOCKER_USER/rust-base:<< parameters.debian_release >>
  

jobs:
  rust-stable-stretch:
    <<: *docker_env
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - build_rust_container:
          target: "armv7hf-gnueabi"
    environment:
      DEBIAN_RELEASE: stretch
      RUST_VERSION: 1.35.0
  base-stretch:
    <<: *docker_env
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - build_base: 
          debian_release: "stretch"

workflows:
  build:
    jobs:
      - rust-stable-stretch:
          requires:
            - base-stretch
      - base-stretch
